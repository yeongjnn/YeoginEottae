<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 날짜 형식 처리를 위해 -->
	<annotation-driven conversion-service="conversionService"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->

	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 파일 업로드 -->
   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="maxUploadSize" value="52428800" />
      <beans:property name="maxInMemorySize" value="1000000" />
      <beans:property name="defaultEncoding" value="UTF-8" />
   </beans:bean>
	
	<!-- 날짜 형식 처리를 위한 bean 객체 등록 -->
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
			<beans:set>
				<beans:bean class="com.party.controller.formatter.LocalDateFormatter"/>
			</beans:set>
		</beans:property>
	</beans:bean>
	
	<!-- BCryptPasswordEncoder -->
   <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
	
	
	
	<!-- <context:component-scan base-package="com.party.project3" /> -->
	
	<!-- controller 패키지에 존재하는 컨트롤러 클래스들을 스프링으로 인식하기 위해서는
		해당 패키지를 스캔해서 @Controller 어노테이션이 추가된 클래스들의 객체들을
		스프링의 Bean 으로 설정되게 만들어야 한다 (출처 : <자바 웹 개발 워크북>)
	 -->
	 
   <context:component-scan base-package="com.party.controller" />
   <context:component-scan base-package="com.party.member" />
   <context:component-scan base-package="com.party.room" />      
   <context:component-scan base-package="com.party.reservation" />      
   <context:component-scan base-package="com.party.review" />
   <context:component-scan base-package="com.party.notice" />
   <context:component-scan base-package="com.party.question" />
   <context:component-scan base-package="com.party.like" />  
   <context:component-scan base-package="com.party.board" />  
   <context:component-scan base-package="com.party.Import" />
  
</beans:beans>
